// <auto-generated />
using ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationDbContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325111405_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.DataModels.DataCenter", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("DataCenters");
                });

            modelBuilder.Entity("Domain.DataModels.Database", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataBaseEngineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("DataBaseEngineName");

                    b.ToTable("Database");
                });

            modelBuilder.Entity("Domain.DataModels.DatabaseEngine", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataCenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.HasIndex("DataCenterName");

                    b.ToTable("DatabaseEngine");
                });

            modelBuilder.Entity("Domain.DataModels.Database", b =>
                {
                    b.HasOne("Domain.DataModels.DatabaseEngine", null)
                        .WithMany("Databases")
                        .HasForeignKey("DataBaseEngineName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.DataModels.DatabaseEngine", b =>
                {
                    b.HasOne("Domain.DataModels.DataCenter", null)
                        .WithMany("DatabaseEngines")
                        .HasForeignKey("DataCenterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.DataModels.DataCenter", b =>
                {
                    b.Navigation("DatabaseEngines");
                });

            modelBuilder.Entity("Domain.DataModels.DatabaseEngine", b =>
                {
                    b.Navigation("Databases");
                });
#pragma warning restore 612, 618
        }
    }
}
